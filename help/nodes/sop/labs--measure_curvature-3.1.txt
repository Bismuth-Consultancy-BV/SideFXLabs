= Labs Measure Curvature =

#type:     node
#context:  sop
#internal: labs::measure_curvature::3.1
#icon:     VOP/curvature

"""Measures the convex and concave curvature of a model."""

Measures the curvature of a model and outputs it as point colors. 

Handy for all types of calculations, including scattering and polyreduction.

By Default, green color will represent convex values, and red will represent concave values. Use Grayscale will output grayscale color values. 

[Image:/images/measure_curvature.png]

@parameters

    Method:
        #id: method
	Options for the algorithm to calculate the curvature. 
    
    Sample Resolution:
        #id: sampleresolution
	Adjusts the size of the voxel grid for the Volume Analysis method.
    
    Piece Attribute:
       #id: pieceattr
	Calculates curvature independently for each named piece.
    
    Piece Attribute:
        #id: innerradius
	The primitive attribute to be used for looping over geometry internally.

    == Convex Adjustment ==
    
    Attribute:
        #id: convexityattr
	The point attribute to be created to store the curvature values in. 
    
    Multiplier:
        #id: convexitymult
	Multiplies the calculated curvature values.

    Blur Amount:
        #id: convexityblur
	Blurs the calculated curvature values on neighboring points to produce a more smooth result.

    Remap Range:
        #id: convexityramp
	Remaps the linear 0-1 values calculated internally.

    == Concave Adjustment ==

    Attribute:
        #id: concavityattr
	The point attribute to be created to store the curvature values in. 

    Multiplier:
        #id: concavitymult
	Multiplies the calculated curvature values.

    Blur Amount:
        #id: concavityblur
	Blurs the calculated curvature values on neighboring points to produce a more smooth result.

    Remap Range:
        #id: concavityramp
	Remaps the linear 0-1 values calculated internally.
    
    == Visualization ==

    Visualize Output:
        #id: viscolor
	Visualizes the concave and convex attributes as colors.

    Use Grayscale:
        #id: usegrayscale
	Uses grayscale values to visualize both concave and convex values.
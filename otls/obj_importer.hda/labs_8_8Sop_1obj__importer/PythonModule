
def LoadMTL(node):

    node.node("file1").cook(force=True)
    
    try:
        node.node("python1").cook(force=True)
    except:
        return

    datapoints = node.node("python1").geometry().points()
    QuickMat = node.node("mesh_materials")    
    QuickMat.parm("mMaterialEntries").set(len(datapoints))

    for x, point in enumerate(datapoints):
        QuickMat.parm("materialname_%s" % (x+1)).set(point.attribValue('newmtl'))
        QuickMat.parm("groupselection_%s" % (x+1)).set("@shop_materialpath=*%s" % point.attribValue('newmtl'))

        parms = [["principledshader_basecolor_texture_", "map_Kd"], ["principledshader_opaccolor_texture_", "map_d"], ["principledshader_ior_", "Ni"], ["principledshader_baseBump_bumpTexture_", "map_bump"]]
        parmtuples = [["principledshader_basecolor_", "Kd"]]

        for parm in parms:
            try:
                QuickMat.parm(parm[0]+str(x+1)).set(point.attribValue(parm[1]))
            except: pass
        for parm in parmtuples:
            try:
                QuickMat.parmTuple(parm[0]+str(x+1)).set(point.attribValue(parm[1]))
            except: pass